     1                                  ;
     2                                  ; file: sub1.asm
     3                                  ; Subprogram example program
     4                                  
     5                                  %include "asm_io.inc"
     6                              <1> 	extern  read_int, print_int, print_string
     7                              <1> 	extern	read_char, print_char, print_nl
     8                              <1> 	extern  sub_dump_regs, sub_dump_mem, sub_dump_math, sub_dump_stack
     9                              <1> 
    10                              <1> %macro 	dump_regs 1
    11                              <1> 	push	  dword %1
    12                              <1> 	call	  sub_dump_regs
    13                              <1> %endmacro
    14                              <1> 
    15                              <1> 
    16                              <1> ;
    17                              <1> ; usage: dump_mem label, start-address, # paragraphs
    18                              <1> %macro  dump_mem 3
    19                              <1> 	push	 dword %1
    20                              <1> 	push	 dword %2
    21                              <1> 	push	 dword %3
    22                              <1> 	call	 sub_dump_mem
    23                              <1> %endmacro
    24                              <1> 
    25                              <1> %macro	dump_math 1
    26                              <1> 	push	 dword %1
    27                              <1> 	call	 sub_dump_math
    28                              <1> %endmacro
    29                              <1> 
    30                              <1> %macro  dump_stack 3
    31                              <1> 	push	 dword %3
    32                              <1>         push     dword %2
    33                              <1> 	push	 dword %1
    34                              <1>         call     sub_dump_stack
    35                              <1> %endmacro
    36                                  
    37                                  segment .data
    38                                  
    39 00000000 64000000                var1    dd  100
    40 00000004 C8000000                var2    dd  200
    41                                  
    42                                  segment .bss
    43                                  
    44                                  
    45                                  segment .text
    46                                          global  asm_main
    47                                  asm_main:
    48 00000000 C8000000                        enter   0,0               ; setup routine
    49 00000004 60                              pusha
    50                                  
    51 00000005 A1[00000000]                    mov     eax,[var1]
    52 0000000A E8(00000000)                    call    print_int
    53 0000000F E8(00000000)                    call    print_nl
    54 00000014 BB[04000000]                    mov     ebx,var2
    55 00000019 8B8300FEFFFF                    mov     eax,[ebx-512]
    56 0000001F E8(00000000)                    call    print_int
    57 00000024 E8(00000000)                    call    print_nl
    58                                  
    59 00000029 61                              popa
    60 0000002A B800000000                      mov     eax, 0            ; return back to C
    61 0000002F C9                              leave                     
    62 00000030 C3                              ret
    63                                  
